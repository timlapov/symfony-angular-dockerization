services:
  nginx:
    build:
      context: ./docker/nginx
    volumes:
      - ./app:/symfony
      - .env:/symfony/.env
      - .env.local:/symfony/.env.local
    container_name: $PROJECT_NAME-nginx
    restart: always
    ports:
      - "8081:80"

  php-fpm:
    build:
      context: ./docker/php-fpm
    volumes:
      - ./app:/symfony
      - .env:/symfony/.env
      - .env.local:/symfony/.env.local
    restart: always
    container_name: $PROJECT_NAME-php-fpm
    depends_on:
      - mysql

  php-cli:
    build:
      context: ./docker/php-cli
    volumes:
      - ./app:/symfony
      - .env:/symfony/.env
      - .env.local:/symfony/.env.local
    # command: sleep 10000
    # command: composer install --no-interaction --no-plugins --no-scripts && sleep infinity
    command: bash -c "composer install --no-interaction --no-plugins --no-scripts && composer update && sleep infinity"
    container_name: $PROJECT_NAME-php-cli

  mysql:
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - ./mysql:/var/lib/mysql
    container_name: $PROJECT_NAME-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
      MYSQL_DATABASE: $MYSQL_DATABASE
      MYSQL_USER: $MYSQL_USER
      MYSQL_PASSWORD: $MYSQL_PASSWORD
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    ports:
      - "8080:80"
    restart: always
    environment:
      PMA_HOST: mysql
      PMA_USER: root
      PMA_PASSWORD: $MYSQL_ROOT_PASSWORD
    depends_on:
      mysql:
        condition: service_healthy

  angular:
    build:
      context: ./panier
    container_name: $PROJECT_NAME-angular
    restart: always
    ports:
      - "4200:8080"
    depends_on:
      - phpmyadmin

  backup:
    image: mysql:8.0
    volumes:
      - ./backups:/backups
    depends_on:
      - mysql
    command: >
      bash -c "while true; do 
        mysqldump -h mysql -u root -p${MYSQL_ROOT_PASSWORD} --all-databases > /backups/backup-$$(date +%Y-%m-%d-%H-%M-%S).sql; 
        sleep 86400; 
      done"

volumes:
  mysql: